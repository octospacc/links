/*
	Sources and license: https://github.com/aceakash/string-similarity
*/
function compareTwoStrings(r,e){if((r=r.replace(/\s+/g,""))===(e=e.replace(/\s+/g,"")))return 1;if(r.length<2||e.length<2)return 0;let n=new Map;for(let t=0;t<r.length-1;t++){var s=r.substring(t,t+2),a=n.has(s)?n.get(s)+1:1;n.set(s,a)}let g=0;for(let t=0;t<e.length-1;t++){var i=e.substring(t,t+2),o=n.has(i)?n.get(i):0;0<o&&(n.set(i,o-1),g++)}return 2*g/(r.length+e.length-2)}function findBestMatch(r,e){if(!areArgsValid(r,e))throw new Error("Bad arguments: First argument should be a string, second should be an array of strings");const n=[];let s=0;for(let t=0;t<e.length;t++){var a=e[t],g=compareTwoStrings(r,a);n.push({target:a,rating:g}),g>n[s].rating&&(s=t)}var t=n[s];return{ratings:n,bestMatch:t,bestMatchIndex:s}}function areArgsValid(t,r){return"string"==typeof t&&(!!Array.isArray(r)&&(!!r.length&&!r.find(function(t){return"string"!=typeof t})))}module.exports={compareTwoStrings:compareTwoStrings,findBestMatch:findBestMatch};